<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SABlog</title>
  <subtitle>StoneArk&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.stoneark.org/"/>
  <updated>2016-08-24T07:15:24.000Z</updated>
  <id>http://blog.stoneark.org/</id>
  
  <author>
    <name>StoneArk</name>
    <email>stoneark86@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Swift 编程思路的变化</title>
    <link href="http://blog.stoneark.org/2016/07/05/changes-about-programming-thinking-in-swift/"/>
    <id>http://blog.stoneark.org/2016/07/05/changes-about-programming-thinking-in-swift/</id>
    <published>2016-07-05T08:46:19.000Z</published>
    <updated>2016-08-24T07:15:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天看到<a href="http://alisoftware.github.io/swift/2015/09/06/thinking-in-swift-1/" target="_blank" rel="external">这篇文章</a>，才发现之前那次尝试着用 Swift 写代码时犯了一个多大的错误。</p>
<p>上次是在做优优育儿时，有一个新功能非常简单，就是一个单纯的列表页，所以尝试着用 Swift 进行了实现。而我当时正是像文章中写的那样，只是把之前 Objective-C 的写法按照 Swift 的语法进行了变化，然后相信了 Xcode 的代码更正提示，结果虽然可以正常运行，但代码里全是 exclamation mark。</p>
<p>阅读了这个系列的文章，发现 Swift 的确是个现代化的语言。虽然凭借传统语言的知识可以很容易地入手，但它所带来的不仅仅是语法的改变，更多的是编程思路的变化。</p>
<p>下面我将分别展示三段代码，功能是从 JSON 串中得到一个 Article 对象的数组。第一段是用 Objective-C 编写的代码，这也是我写这种功能的标准形式。第二段是按照传统思路编写的 Swift 代码，是应该避免的。第三段是用正确的思路编写的 Swift 代码。</p>
<a id="more"></a>
<h3 id="第一段代码"><a href="#第一段代码" class="headerlink" title="第一段代码"></a>第一段代码</h3><figure class="highlight objc"><figcaption><span>ArticleObject.h</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ArticleObject</span> : <span class="title">NSObject</span></span></div><div class="line">+ (<span class="built_in">NSArray</span>*)articleArrayWithJSONData:(<span class="built_in">NSData</span>*)data;</div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
<figure class="highlight objc"><figcaption><span>ArticleObject.m</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">"ArticleObject.h"</span></span></div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ArticleObject</span>()</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *objectID;</div><div class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *title;</div><div class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>) <span class="built_in">NSURL</span> *url;</div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ArticleObject</span></span></div><div class="line">+ (<span class="built_in">NSArray</span>*)articleArrayWithJSONData:(<span class="built_in">NSData</span>*)data &#123;</div><div class="line">    <span class="built_in">NSArray</span> *arrData = [<span class="built_in">NSJSONSerialization</span> JSONObjectWithData:data options:<span class="number">0</span> error:<span class="literal">nil</span>];</div><div class="line">    <span class="built_in">NSMutableArray</span> *arrArticle = [[<span class="built_in">NSMutableArray</span> alloc]init];</div><div class="line">    <span class="keyword">for</span> (<span class="built_in">NSDictionary</span> *dictItem <span class="keyword">in</span> arrData) &#123;</div><div class="line">        ArticleObject *articleObj = [[ArticleObject alloc]initWithDictionary:dictItem];</div><div class="line">        [arrArticle addObject:articleObj];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> arrArticle;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">instancetype</span>)initWithDictionary:(<span class="built_in">NSDictionary</span>*)dict &#123;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="keyword">super</span> init]) &#123;</div><div class="line">        [<span class="keyword">self</span> setWithDictionary:dict];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)setWithDictionary:(<span class="built_in">NSDictionary</span>*)dict &#123;</div><div class="line">    [<span class="keyword">self</span> setObjectID:dict[<span class="string">@"id"</span>]];</div><div class="line">    [<span class="keyword">self</span> setTitle:dict[<span class="string">@"title"</span>]];</div><div class="line">    [<span class="keyword">self</span> setUrl:[<span class="built_in">NSURL</span> URLWithString:dict[<span class="string">@"url"</span>]]];</div><div class="line">&#125;</div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
<h3 id="第二段代码"><a href="#第二段代码" class="headerlink" title="第二段代码"></a>第二段代码</h3><p>可以看到，这段代码完全就是上面代码的 Swift 版，很容易理解，但里面有很多的惊叹号。至于为什么这样做非常不好，可以参见最开头提到的文章。</p>
<figure class="highlight swift"><figcaption><span>ArticleObject.swift</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleObject</span>: <span class="title">NSObject</span> </span>&#123;</div><div class="line">    <span class="keyword">var</span> objectID: <span class="type">String</span> = <span class="string">""</span></div><div class="line">    <span class="keyword">var</span> title: <span class="type">String</span> = <span class="string">""</span></div><div class="line">    <span class="keyword">var</span> url: <span class="type">NSURL</span>!</div><div class="line">    </div><div class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">articleArrayWithJSONData</span><span class="params">(data: NSData)</span></span> -&gt; <span class="type">NSArray</span> &#123;</div><div class="line">        <span class="keyword">let</span> arrData: <span class="type">NSArray</span> = <span class="keyword">try</span>! <span class="type">NSJSONSerialization</span>.<span class="type">JSONObjectWithData</span>(data, options: []) <span class="keyword">as</span>! <span class="type">NSArray</span></div><div class="line">        <span class="keyword">let</span> arrArticle: <span class="type">NSMutableArray</span> = <span class="type">NSMutableArray</span>()</div><div class="line">        <span class="keyword">for</span> dictItem <span class="keyword">in</span> arrData &#123;</div><div class="line">            <span class="keyword">let</span> articleObj : <span class="type">ArticleObject</span> = <span class="type">ArticleObject</span>()</div><div class="line">            articleObj.setWithDictionary(dictItem <span class="keyword">as</span>! <span class="type">NSDictionary</span>)</div><div class="line">            arrArticle.addObject(articleObj)</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> arrArticle</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">setWithDictionary</span><span class="params">(dict: NSDictionary)</span></span> &#123;</div><div class="line">        <span class="keyword">self</span>.objectID = dict[<span class="string">"id"</span>] <span class="keyword">as</span>! <span class="type">String</span></div><div class="line">        <span class="keyword">self</span>.title = dict[<span class="string">"title"</span>] <span class="keyword">as</span>! <span class="type">String</span></div><div class="line">        <span class="keyword">self</span>.url = <span class="type">NSURL</span>(string: dict[<span class="string">"url"</span>] <span class="keyword">as</span>! <span class="type">String</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="第三段代码"><a href="#第三段代码" class="headerlink" title="第三段代码"></a>第三段代码</h3><p>这里面就有很多 Swift 的新东西了，比如 guard let, if let, flatMap 等。虽然代码好像更长了，也不那么易懂了，但这才是更安全可靠的代码。</p>
<figure class="highlight swift"><figcaption><span>ArticleObject.swift</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleObject</span> </span>&#123;</div><div class="line">    <span class="keyword">var</span> objectID: <span class="type">String</span></div><div class="line">    <span class="keyword">var</span> title: <span class="type">String</span></div><div class="line">    <span class="keyword">var</span> url: <span class="type">NSURL</span></div><div class="line">    </div><div class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">articleArrayWithJSONData</span><span class="params">(data: NSData)</span></span> -&gt; [<span class="type">ArticleObject</span>] &#123;</div><div class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> jsonData = <span class="keyword">try</span>? <span class="type">NSJSONSerialization</span>.<span class="type">JSONObjectWithData</span>(data, options: []),</div><div class="line">            <span class="keyword">let</span> arrData = jsonData <span class="keyword">as</span>? <span class="type">Array</span>&lt;<span class="type">Dictionary</span>&lt;<span class="type">String</span>,<span class="type">AnyObject</span>&gt;&gt;</div><div class="line">            <span class="keyword">else</span> &#123;<span class="keyword">return</span>[]&#125;</div><div class="line">        <span class="keyword">return</span> arrData.flatMap&#123;(dictItem: <span class="type">Dictionary</span>&lt;<span class="type">String</span>,<span class="type">AnyObject</span>&gt;) -&gt; <span class="type">ArticleObject</span>? <span class="keyword">in</span></div><div class="line">            <span class="keyword">if</span> <span class="keyword">let</span> articleObj: <span class="type">ArticleObject</span> = <span class="type">ArticleObject</span>(dictionary: dictItem) &#123;</div><div class="line">                <span class="keyword">return</span> articleObj</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">return</span> <span class="literal">nil</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">init</span>?(dictionary: [<span class="type">String</span>:<span class="type">AnyObject</span>]) &#123;</div><div class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> objectID = dictionary[<span class="string">"id"</span>] <span class="keyword">as</span>? <span class="type">String</span>,</div><div class="line">            <span class="keyword">let</span> title = dictionary[<span class="string">"title"</span>] <span class="keyword">as</span>? <span class="type">String</span>,</div><div class="line">            <span class="keyword">let</span> urlString = dictionary[<span class="string">"url"</span>] <span class="keyword">as</span>? <span class="type">String</span>,</div><div class="line">            <span class="keyword">let</span> url = <span class="type">NSURL</span>(string: urlString)</div><div class="line">            <span class="keyword">else</span> &#123;<span class="keyword">return</span> <span class="literal">nil</span>&#125;</div><div class="line">        </div><div class="line">        <span class="keyword">self</span>.objectID = objectID;</div><div class="line">        <span class="keyword">self</span>.title = title;</div><div class="line">        <span class="keyword">self</span>.url = url;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">setData</span><span class="params">(withDictionary: NSDictionary)</span></span> &#123;</div><div class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> objectID = withDictionary[<span class="string">"id"</span>] <span class="keyword">as</span>? <span class="type">String</span>,</div><div class="line">            <span class="keyword">let</span> title = withDictionary[<span class="string">"title"</span>] <span class="keyword">as</span>? <span class="type">String</span>,</div><div class="line">            <span class="keyword">let</span> urlString = withDictionary[<span class="string">"url"</span>] <span class="keyword">as</span>? <span class="type">String</span>,</div><div class="line">            <span class="keyword">let</span> url = <span class="type">NSURL</span>(string: urlString)</div><div class="line">            <span class="keyword">else</span> &#123;<span class="keyword">return</span>&#125;</div><div class="line">        </div><div class="line">        <span class="keyword">self</span>.objectID = objectID;</div><div class="line">        <span class="keyword">self</span>.title = title;</div><div class="line">        <span class="keyword">self</span>.url = url;</div><div class="line">    &#125;   </div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天看到&lt;a href=&quot;http://alisoftware.github.io/swift/2015/09/06/thinking-in-swift-1/&quot;&gt;这篇文章&lt;/a&gt;，才发现之前那次尝试着用 Swift 写代码时犯了一个多大的错误。&lt;/p&gt;
&lt;p&gt;上次是在做优优育儿时，有一个新功能非常简单，就是一个单纯的列表页，所以尝试着用 Swift 进行了实现。而我当时正是像文章中写的那样，只是把之前 Objective-C 的写法按照 Swift 的语法进行了变化，然后相信了 Xcode 的代码更正提示，结果虽然可以正常运行，但代码里全是 exclamation mark。&lt;/p&gt;
&lt;p&gt;阅读了这个系列的文章，发现 Swift 的确是个现代化的语言。虽然凭借传统语言的知识可以很容易地入手，但它所带来的不仅仅是语法的改变，更多的是编程思路的变化。&lt;/p&gt;
&lt;p&gt;下面我将分别展示三段代码，功能是从 JSON 串中得到一个 Article 对象的数组。第一段是用 Objective-C 编写的代码，这也是我写这种功能的标准形式。第二段是按照传统思路编写的 Swift 代码，是应该避免的。第三段是用正确的思路编写的 Swift 代码。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Swift" scheme="http://blog.stoneark.org/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>应用上线后 IAP 商品不会立即生效</title>
    <link href="http://blog.stoneark.org/2016/07/03/iap-take-effect-later-than-app-release/"/>
    <id>http://blog.stoneark.org/2016/07/03/iap-take-effect-later-than-app-release/</id>
    <published>2016-07-03T08:19:33.000Z</published>
    <updated>2016-08-23T08:28:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>应用和 IAP 项目均在 App Store 审核通过后，发现从 App Store 内下载的版本，无法正常获取到 IAP 商品信息，通过 product ID 获取 product 时，未能返回相应的 product。</p>
<p>测试环境（Sandbox）下一切正常，可根据 product ID 获取到 product，完成支付。</p>
<p>推测应该是由于 IAP 审核通过后并没有同步及时的上线，所以导致无法正常获取到 product，等待一段时间即可。（我等待了约 7 个小时就正常了，也有人等待了一两天）</p>
<p>所以在程序中要注意，如果获取不到 product 做相应的处理，防止程序崩溃。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;应用和 IAP 项目均在 App Store 审核通过后，发现从 App Store 内下载的版本，无法正常获取到 IAP 商品信息，通过 product ID 获取 product 时，未能返回相应的 product。&lt;/p&gt;
&lt;p&gt;测试环境（Sandbox）下一切正常，
    
    </summary>
    
    
      <category term="iOS" scheme="http://blog.stoneark.org/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>管理宽广而严格的广电总局</title>
    <link href="http://blog.stoneark.org/2016/06/30/the-strict-sapprft/"/>
    <id>http://blog.stoneark.org/2016/06/30/the-strict-sapprft/</id>
    <published>2016-06-30T07:49:54.000Z</published>
    <updated>2016-08-23T08:17:24.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="广电总局状告苹果-App-Store"><a href="#广电总局状告苹果-App-Store" class="headerlink" title="广电总局状告苹果 App Store"></a>广电总局状告苹果 App Store</h3><p>因为广电总局电影卫星频道节目制作中心具有电影《血搏敌枭》的独家网络传播权，而优酷侵权播放了这部电影，所以广电总局状告了苹果公司。</p>
<p>是不是很奇怪？优酷的错为什么状告苹果？</p>
<p>因为优酷的应用是通过苹果 App Store 下载的，所以，苹果，自然要怪你喽。</p>
<h3 id="广电总局要求审核国内游戏"><a href="#广电总局要求审核国内游戏" class="headerlink" title="广电总局要求审核国内游戏"></a>广电总局要求审核国内游戏</h3><p>苹果最终还是拿它没有任何办法，在最后一刻公布了这个决定。</p>
<p><img src="http://stoneark.qiniudn.com/blogimg/sapprft_will_review_game_in_appstore.png" alt=""></p>
<p>游戏个人开发者可以放弃了。但愿不要插手其他类型的应用。我们并不是怕审核，怕的是没有具体审核规则，怕的是自由裁量，怕的是复杂的审核流程、漫长的审核周期、徒增的审核成本，怕的是会应运而生的各种代理。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;广电总局状告苹果-App-Store&quot;&gt;&lt;a href=&quot;#广电总局状告苹果-App-Store&quot; class=&quot;headerlink&quot; title=&quot;广电总局状告苹果 App Store&quot;&gt;&lt;/a&gt;广电总局状告苹果 App Store&lt;/h3&gt;&lt;p&gt;因为广电总局
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Battery drainer gpsd</title>
    <link href="http://blog.stoneark.org/2016/06/18/battery-drainer-gpsd/"/>
    <id>http://blog.stoneark.org/2016/06/18/battery-drainer-gpsd/</id>
    <published>2016-06-18T07:20:52.000Z</published>
    <updated>2016-08-23T07:27:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>降级到 Kitkat 依然掉电凶猛，刷 MIUI 也是一样。查看电池记录，发现一个叫 gpsd 的进程耗费了大量的电量，但即使把 GPS 关掉也无济于事。在网上搜索，发现有很多 S4 用户都遭遇这个问题，有人说到空旷的地方用 GPS 定位一下就好了，但实测无效。用 Better battery life 查看，系统始终不会进入 Deep Sleep 状态，所以一直在唤醒。</p>
<p>找了很多方法，最后终于找到了一个管用的－－把 3G 网络禁用，只允许 2G 网络。不知道是什么原因，但事实证明的确只跟这个有关。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;降级到 Kitkat 依然掉电凶猛，刷 MIUI 也是一样。查看电池记录，发现一个叫 gpsd 的进程耗费了大量的电量，但即使把 GPS 关掉也无济于事。在网上搜索，发现有很多 S4 用户都遭遇这个问题，有人说到空旷的地方用 GPS 定位一下就好了，但实测无效。用 Bett
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>IMEI missing after downgrade Samsung S4</title>
    <link href="http://blog.stoneark.org/2016/06/17/imei-missing-after-downgrade-samsung-s4/"/>
    <id>http://blog.stoneark.org/2016/06/17/imei-missing-after-downgrade-samsung-s4/</id>
    <published>2016-06-17T03:11:09.000Z</published>
    <updated>2016-08-23T07:21:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近手机耗电严重 (Samsung S4 I9502)，充满后放一边不用，半天就电量告急了。恢复所有设置也不奏效，想降级到 Android Kitkat 试试。</p>
<p>从网上下载了 4.4.2 的官方五件套，然后按照网上的方法用 Odin 工具刷入。过程很顺利，重启后变成了 Kitkat 的风格，进入首次设置页面。但马上发现，右上角的信号位置，变成了 ⦸ 这样的符号。查看系统设置，或者拨号键盘输入 *#06#，发现 IMEI 丢失。</p>
<p>上网搜索，发现 Samsung 的机器有个叫 efs 的东西，其中保存了包括 IMEI 在内的一些信息。如果降级前没有备份的话，可能会丢失！绝望了好一阵儿，发现把 SIM 卡放到另一个卡槽里可以用，只不过另一个卡槽只支持 2G 网络。可是这让我越想越觉得奇怪，于是又下载了 5.0.1 的固件刷进去，发现 IMEI 回来了，这说明 efs 并没有丢失。马上 ROOT 之后备份 efs，继续折腾。</p>
<p>再次降级，依然没有信号。ROOT 后查看文件，发现 /efs 目录有个叫 <code>.nv_data.bak</code> 的文件，用这个文件替换这个目录下的 <code>nv_data.bin</code> 文件，然后删掉 <code>nv_data.bin.md5</code> 文件，重新手机，IMEI 恢复。</p>
<p>另外，如果只是把原有的 <code>nv_data.bin</code> 文件删掉，也能恢复信号，但是查看 IMEI，发现是一个不正确的 IMEI（一大串 0，后面是 0049）。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近手机耗电严重 (Samsung S4 I9502)，充满后放一边不用，半天就电量告急了。恢复所有设置也不奏效，想降级到 Android Kitkat 试试。&lt;/p&gt;
&lt;p&gt;从网上下载了 4.4.2 的官方五件套，然后按照网上的方法用 Odin 工具刷入。过程很顺利，重启
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Travel in 2016</title>
    <link href="http://blog.stoneark.org/2016/06/06/travel-in-2016/"/>
    <id>http://blog.stoneark.org/2016/06/06/travel-in-2016/</id>
    <published>2016-06-06T10:03:31.000Z</published>
    <updated>2016-08-23T10:09:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>趁着最近空闲，分两次去了重庆、成都、青岛、日照、上海游玩。</p>
<h3 id="重庆"><a href="#重庆" class="headerlink" title="重庆"></a>重庆</h3><p>2016.3.30。山城。一个 3D 的城市。既有文化底蕴，又有现代繁华。夜晚的江景非常美。<br><img src="http://stoneark.qiniudn.com/blogimg/travel_2016_cq0.jpg" alt=""><br><img src="http://stoneark.qiniudn.com/blogimg/travel_2016_cq1.jpg" alt=""></p>
<h3 id="成都"><a href="#成都" class="headerlink" title="成都"></a>成都</h3><a id="more"></a>
<p>2016.4.3。蓉城。最早的城市，闲适的大都市。同样作为省会，比济南好太多。<br><img src="http://stoneark.qiniudn.com/blogimg/travel_2016_cd0.jpg" alt=""><br><img src="http://stoneark.qiniudn.com/blogimg/travel_2016_cd1.jpg" alt=""></p>
<h3 id="青岛"><a href="#青岛" class="headerlink" title="青岛"></a>青岛</h3><p>2016.5.28。山东省最不像山东的城市，德国的味道。正在修地铁。第二次来，现代化了许多。<br><img src="http://stoneark.qiniudn.com/blogimg/travel_2016_qd0.jpg" alt=""><br><img src="http://stoneark.qiniudn.com/blogimg/travel_2016_qd1.jpg" alt=""></p>
<h3 id="日照"><a href="#日照" class="headerlink" title="日照"></a>日照</h3><p>2016.5.30。母校变了一些。万平口准备收费。路上开始堵车了，修了条地下隧道。有了机场。<br><img src="http://stoneark.qiniudn.com/blogimg/travel_2016_rz0.jpg" alt=""><br><img src="http://stoneark.qiniudn.com/blogimg/travel_2016_rz1.jpg" alt=""><br><img src="http://stoneark.qiniudn.com/blogimg/travel_2016_rz2.jpg" alt=""><br><img src="http://stoneark.qiniudn.com/blogimg/travel_2016_rz3.jpg" alt=""></p>
<h3 id="上海"><a href="#上海" class="headerlink" title="上海"></a>上海</h3><p>2016.6.1。魔都。住在弄堂里。外滩的钟声、万国建筑。陆家嘴的东方明珠、三大高楼。城隍庙的蟹黄汤包、南翔馒头。<br><img src="http://stoneark.qiniudn.com/blogimg/travel_2016_sh0.jpg" alt=""><br><img src="http://stoneark.qiniudn.com/blogimg/travel_2016_sh1.jpg" alt=""><br><img src="http://stoneark.qiniudn.com/blogimg/travel_2016_sh2.jpg" alt=""><br><img src="http://stoneark.qiniudn.com/blogimg/travel_2016_sh3.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;趁着最近空闲，分两次去了重庆、成都、青岛、日照、上海游玩。&lt;/p&gt;
&lt;h3 id=&quot;重庆&quot;&gt;&lt;a href=&quot;#重庆&quot; class=&quot;headerlink&quot; title=&quot;重庆&quot;&gt;&lt;/a&gt;重庆&lt;/h3&gt;&lt;p&gt;2016.3.30。山城。一个 3D 的城市。既有文化底蕴，又有现代繁华。夜晚的江景非常美。&lt;br&gt;&lt;img src=&quot;http://stoneark.qiniudn.com/blogimg/travel_2016_cq0.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://stoneark.qiniudn.com/blogimg/travel_2016_cq1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;成都&quot;&gt;&lt;a href=&quot;#成都&quot; class=&quot;headerlink&quot; title=&quot;成都&quot;&gt;&lt;/a&gt;成都&lt;/h3&gt;
    
    </summary>
    
    
      <category term="travel" scheme="http://blog.stoneark.org/tags/travel/"/>
    
  </entry>
  
  <entry>
    <title>詞記 Release!</title>
    <link href="http://blog.stoneark.org/2016/06/04/ciji-release/"/>
    <id>http://blog.stoneark.org/2016/06/04/ciji-release/</id>
    <published>2016-06-04T09:59:05.000Z</published>
    <updated>2016-07-26T09:57:51.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>Dear friends,</em></p>
<p>我的最新作品，词记，已正式上线 App Store 啦！</p>
<p><img src="http://stoneark.qiniudn.com/appimg/ciji/brief.png" width="450"></p>
<h3 id="应用简介-Description"><a href="#应用简介-Description" class="headerlink" title="应用简介 (Description)"></a>应用简介 (Description)</h3><p>你一定写过日记。或许是小学语文老师布置的家庭作业，或许是青春期时懵懵懂懂的情感记忆，或许是长大后日记本里给自己的加油打气，或许是旅行在外每天晚上写下的旅途随笔。</p>
<p>词记，让你用一个独特的方式写日记。把今天所有的点点滴滴，在思绪中整理、精心挑选，然后只用一个词来概括。</p>
<p>或许随着时间流逝，再看到这些词时，早已想不起这词背后的故事。但这些故事给自己留下的感觉，却依然明晰：惊喜、开心、阳光明媚、意外收获，亦或失落、无聊、阴雨绵绵、心情好糟。</p>
<p>是的，这就是我们的生活。</p>
<p>词记，用一个词记录今天！<br>一天一个词，烦恼去无边～</p>
<p>You have ever written diary. Maybe homework assigned by your teacher, maybe affection memories in your teens, maybe “fighting” in your notebook after graduation, maybe notes in every evening on your trip.</p>
<p>Ciji (詞記), a special way to keep a diary. All things happened today, in mind, pick only one word to describe!</p>
<p>Time flies, maybe you cannot remember the things happened behind these words, but the feelings are clear: surprise, happy, sunshine, windfall, or disappointed, boring, rainy, restless, etc.</p>
<p>Yeah, it is our life.</p>
<p>Ciji (詞記), use one word to record today.<br>A word a day, keep the sadness away~</p>
<h3 id="应用下载-Download"><a href="#应用下载-Download" class="headerlink" title="应用下载 (Download)"></a>应用下载 (Download)</h3><p><a href="https://itunes.apple.com/cn/app/ci-ji-yong-yi-ge-ci-ji-lu-jin-tian/id1113379853?l=zh&amp;ls=1&amp;mt=8" target="_blank" rel="external"><img src="http://stoneark.qiniudn.com/appimg/appstore.png" width="150"></a></p>
<p>喜欢请五星好评哦！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;Dear friends,&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;我的最新作品，词记，已正式上线 App Store 啦！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://stoneark.qiniudn.com/appimg/ciji/brief.png&quot; width=&quot;450
    
    </summary>
    
    
      <category term="App" scheme="http://blog.stoneark.org/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>iTunes Connect Error ITMS-90475</title>
    <link href="http://blog.stoneark.org/2016/05/26/itunes-connect-error-itms-90475/"/>
    <id>http://blog.stoneark.org/2016/05/26/itunes-connect-error-itms-90475/</id>
    <published>2016-05-26T08:58:59.000Z</published>
    <updated>2016-07-22T09:54:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>提交 binary 到 iTunes Connect 时，遇到了之前未遇到过的错误：</p>
<blockquote>
<p>ERROR ITMS-90475: “Invalid Bundle. iPad Multitasking support requires launch story board in bundle ‘org.stoneark.worddiary’.”</p>
</blockquote>
<p>原因是，iPad 程序（或者 Universal 程序），从 iOS 9 / Xcode 7 开始，默认要求支持多任务分屏。但这要求必须使用 Launch Storyboard，而不能再用 Launch Image。而正如<a href="/2016/05/19/bug-about-launchscreen-storyboard">之前说过的</a>，所以我并没有采用 Launch Storyboard，所以导致了这个问题。</p>
<p>目前可以暂时不支持多任务分屏，在工程属性的 General 里，把 <code>Requires full screen</code> 勾选上即可（会在 Info.plist 里增加字段 <code>UIRequiresFullScreen</code>）。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;提交 binary 到 iTunes Connect 时，遇到了之前未遇到过的错误：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ERROR ITMS-90475: “Invalid Bundle. iPad Multitasking support requires laun
    
    </summary>
    
    
      <category term="iOS" scheme="http://blog.stoneark.org/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Application localization in iOS development</title>
    <link href="http://blog.stoneark.org/2016/05/25/application-localization-in-ios-development/"/>
    <id>http://blog.stoneark.org/2016/05/25/application-localization-in-ios-development/</id>
    <published>2016-05-25T08:35:16.000Z</published>
    <updated>2016-07-25T06:05:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>iOS 对国际化的支持是相对比较完善的。</p>
<h2 id="应用的国际化支持"><a href="#应用的国际化支持" class="headerlink" title="应用的国际化支持"></a>应用的国际化支持</h2><p>在 Project 属性中，有 Localizations 一项，在其中可以管理支持的语言列表，还可以选择是否开启 Base 语言。</p>
<p><img src="http://stoneark.qiniudn.com/blogimg/application_localization_in_ios_development_1.png" width="457"></p>
<h2 id="为资源文件开启国际化"><a href="#为资源文件开启国际化" class="headerlink" title="为资源文件开启国际化"></a>为资源文件开启国际化</h2><p>在资源文件（如 strings/xib/storyboard）的文件属性中，可以在 Localization 项中进行国际化语言的管理。如果尚未国际化，会有一个长长的 Localization 按钮，点击后开启这个文件的国际化。如果已国际化，会显示并可管理当前文件已支持的语言。</p>
<p><img src="http://stoneark.qiniudn.com/blogimg/application_localization_in_ios_development_2.png" width="259"></p>
<p>如果想取消对这个文件的国际化，在 Xcode 里做不到。唯一的办法是，去 Finder 里把各个语言的 .lproj 目录下的这个资源文件删掉，只留一份放到工程目录的最外层（而不从属与任何 .lproj 目录）。</p>
<h2 id="字符串的国际化："><a href="#字符串的国际化：" class="headerlink" title="字符串的国际化："></a>字符串的国际化：</h2><p>自己新建一个 String 文件到工程里，名为 <code>Localizable.strings</code> 即可。（这是默认的文件名，调用 <code>NSLocalizedString</code> 方法默认取这个文件，如果用了其他的文件名，则每次调用方法时，需要指定文件名）</p>
<p>例如，Localizable.strings 内容为：</p>
<figure class="highlight xml"><figcaption><span>Localizable.strings(Chinese (Simplified))</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">"Today" = "今天";</div><div class="line">"Yesterday" = "昨天";</div><div class="line">"%d days ago" = "%d天前";</div><div class="line">/* &#123;User First Name&#125;'s Profile */</div><div class="line">"%@'s Profile"="%@'s Profile";</div></pre></td></tr></table></figure>
<figure class="highlight xml"><figcaption><span>Localizable.strings(English)</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">"Today" = "Today";</div><div class="line">"Yesterday" = "Yesterday";</div><div class="line">"%d days ago" = "%d days ago";</div><div class="line">/* &#123;User First Name&#125;'s Profile */</div><div class="line">"%@'s Profile"="%@的个人资料";</div></pre></td></tr></table></figure>
<p>获取时：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSString</span> *str;</div><div class="line">str = <span class="built_in">NSLocalizedString</span>(<span class="string">@"Today"</span>, <span class="literal">nil</span>);</div><div class="line"><span class="keyword">int</span> temp = <span class="number">3</span>;</div><div class="line">str = [<span class="built_in">NSString</span> stringWithFormat:<span class="built_in">NSLocalizedString</span>(<span class="string">@"%d days ago"</span>, <span class="literal">nil</span>), temp];</div><div class="line">str = [<span class="built_in">NSString</span> stringWithFormat:<span class="built_in">NSLocalizedString</span>(<span class="string">@"%@'s Profile"</span>, <span class="string">@"&#123;User First Name&#125;'s Profile"</span>), user.name];</div></pre></td></tr></table></figure>
<p>上面是常用的情况。还有一种复杂的情况，是在有些语言里，某两个参数的位置可能会颠倒，这时需要使用转义符：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&quot;%@ Error! %@ failed!&quot; = &quot;%2$@ 失败了！％1$@ 错误了！&quot;;</div></pre></td></tr></table></figure>
<p>更为详细的可参照：<br><a href="http://nshipster.com/nslocalizedstring/" target="_blank" rel="external">http://nshipster.com/nslocalizedstring/</a><br><a href="https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/LoadingResources/Strings/Strings.html" target="_blank" rel="external">https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/LoadingResources/Strings/Strings.html</a><br><a href="https://developer.apple.com/library/ios/documentation/MacOSX/Conceptual/BPInternational/InternationalizingYourCode/InternationalizingYourCode.html" target="_blank" rel="external">https://developer.apple.com/library/ios/documentation/MacOSX/Conceptual/BPInternational/InternationalizingYourCode/InternationalizingYourCode.html</a></p>
<h2 id="xib-storyboard-的国际化"><a href="#xib-storyboard-的国际化" class="headerlink" title="xib/storyboard 的国际化"></a>xib/storyboard 的国际化</h2><p>除了借助 localizable strings 文件进行界面国际化之外，对于 xib/storyboard 可以直接进行国际化。虽然看上去很方便、很直观，但其实并不是特别好用。</p>
<p>它的原理其实还是 localizable strings，只不过这个 strings 文件是 Xcode 自动创建的。创建的时机是在你对这个界面开启 localization 时，而且它并不会监控 xib/storyboard 的变化。如果你在 localization 之后又改变了这个 xib/storyboard，主要是增加了新的控件，那么这个新控件并不会自动出现在 strings 文件中。</p>
<p>那你就没办法了，Xcode 也没有提供同步的手段，你唯一能做的是查看 xib 的源代码，从中找到新建控件的 ID，然后自己写到那个 strings 文件里－－噢，这一点都不方便。</p>
<h2 id="Bundle-Display-Name-的国际化"><a href="#Bundle-Display-Name-的国际化" class="headerlink" title="Bundle Display Name 的国际化"></a>Bundle Display Name 的国际化</h2><p>显然，需要对不同语言设定不同的应用名称，也就是 Bundle Display Name，我们都知道它在 Info.plist 里。</p>
<p>但注意，不是把 Info.plist 进行 Localization，如果对 Info.plist 进行了 Localization，会编译报错 the file Info.plist does not exist.</p>
<p>正确的方式是在工程里新建一个名为 <code>InfoPlist.strings</code> 的文件，然后对这个 strings 文件进行国际化，在里面写入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&quot;CFBundleDisplayName&quot; = &quot;名称&quot;;</div></pre></td></tr></table></figure>
<p>即可。</p>
<p>注意，需要把 InfoPlist.strings 文件加到工程属性里的 Copy Bundle Resources 里（默认应该就给加上了，如果有问题可以检查一下）。但不要把 Info.plist 文件加到 Copy Bundle Resources 里，否则出现编译警告。</p>
<h2 id="Base-语言的问题"><a href="#Base-语言的问题" class="headerlink" title="Base 语言的问题"></a>Base 语言的问题</h2><p>测试发现，将 iOS 设备设置为并没有支持的语言时，应用并没有正确地显示为 Base 中的字符串（英语），而是显示成了简体中文。</p>
<p>Stackoverflow 上有很多国内外开发者遇到了这个问题，但都未找到原因和解决方法。</p>
<p><a href="http://stackoverflow.com/questions/20241256/ios-app-default-language-en-is-not-applied" target="_blank" rel="external">http://stackoverflow.com/questions/20241256/ios-app-default-language-en-is-not-applied</a><br><a href="http://stackoverflow.com/questions/20241256/ios-app-default-language-en-is-not-applied" target="_blank" rel="external">http://stackoverflow.com/questions/20584984/ios-set-a-default-language-in-xcode-for-my-app</a><br><a href="http://stackoverflow.com/questions/18114994/does-my-base-internationalization-storyboard-have-to-correspond-to-a-fallback-la" target="_blank" rel="external">http://stackoverflow.com/questions/18114994/does-my-base-internationalization-storyboard-have-to-correspond-to-a-fallback-la</a></p>
<h2 id="App-Store-应用名称及简介的国际化"><a href="#App-Store-应用名称及简介的国际化" class="headerlink" title="App Store 应用名称及简介的国际化"></a>App Store 应用名称及简介的国际化</h2><p>希望让应用在不同国家的 App Store 中显示不同语言的名称，在 iTunes Connect 里新建应用时先用一个主要语言新建，如简体中文，新建成功后在 App 信息里可以看到“可本地化的信息”，可以在右侧选择语言，并且填入相对应的信息。另外，在版本中对应用简介、关键字、截图等也都须进行国际化。</p>
<p>如果未做本地化，则按照选择的主要语言显示。</p>
<p><img src="http://stoneark.qiniudn.com/blogimg/application_localization_in_ios_development.png" width="871"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;iOS 对国际化的支持是相对比较完善的。&lt;/p&gt;
&lt;h2 id=&quot;应用的国际化支持&quot;&gt;&lt;a href=&quot;#应用的国际化支持&quot; class=&quot;headerlink&quot; title=&quot;应用的国际化支持&quot;&gt;&lt;/a&gt;应用的国际化支持&lt;/h2&gt;&lt;p&gt;在 Project 属性中，有 Lo
    
    </summary>
    
    
      <category term="iOS" scheme="http://blog.stoneark.org/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Bug about launchscreen storyboard</title>
    <link href="http://blog.stoneark.org/2016/05/19/bug-about-launchscreen-storyboard/"/>
    <id>http://blog.stoneark.org/2016/05/19/bug-about-launchscreen-storyboard/</id>
    <published>2016-05-19T08:17:08.000Z</published>
    <updated>2016-07-25T06:06:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>Launchscreen storyboard，看起来很美，用起来很臭虫。</p>
<p>之前一直没在实践中真正采用过它，这次一试，可真是让人摸不着头脑。</p>
<p>一旦有两个 ImageView，则它们的表现会非常奇怪。尤其是两个图像有重叠部分的时候。<br>即使一张图片在另一张下方，也会把上方图片的重叠部分遮盖住。</p>
<p>设计时：（灰色渐变背景在底层，词记图标在上层）</p>
<p><img src="http://stoneark.qiniudn.com/blogimg/bug_about_launchscreen_storyboard.png" width="350"></p>
<p>运行时：（重叠部分被底层遮盖了）</p>
<p><img src="http://stoneark.qiniudn.com/blogimg/bug_about_launchscreen_storyboard_1.png" width="320"></p>
<p>关于 Launchscreen storyboard，涉及到 UIImageView 出现了很多问题，至今也没有解决：<br><a href="https://forums.developer.apple.com/thread/17146" target="_blank" rel="external">https://forums.developer.apple.com/thread/17146</a>，<br><a href="https://forums.developer.apple.com/message/62721" target="_blank" rel="external">https://forums.developer.apple.com/message/62721</a></p>
<p>暂时还是不用它了，用回 Launch image asset。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Launchscreen storyboard，看起来很美，用起来很臭虫。&lt;/p&gt;
&lt;p&gt;之前一直没在实践中真正采用过它，这次一试，可真是让人摸不着头脑。&lt;/p&gt;
&lt;p&gt;一旦有两个 ImageView，则它们的表现会非常奇怪。尤其是两个图像有重叠部分的时候。&lt;br&gt;即使一张
    
    </summary>
    
    
      <category term="iOS" scheme="http://blog.stoneark.org/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Sketch 导出时保留透明像素</title>
    <link href="http://blog.stoneark.org/2016/05/18/sketch-keep-transparent-pixels-when-export/"/>
    <id>http://blog.stoneark.org/2016/05/18/sketch-keep-transparent-pixels-when-export/</id>
    <published>2016-05-18T07:18:19.000Z</published>
    <updated>2016-07-25T06:06:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>有些图标我们希望它的边缘要有一定的透明像素。</p>
<p>比如有一组图标作为 TableView 列表左侧的图标，如果这些图标的宽度不相同的话，会造成文字的左侧起点不能对齐。所以这一组图标的宽度必须都相同。</p>
<p><img src="http://stoneark.qiniudn.com/blogimg/sketch_keep_transparent_pixels.jpg" width="240"></p>
<p>假设统一宽度为 20px，但是有的图标的实际尺寸可能不足 20px，所以一般我们会将这些图标的左右两边，填充透明像素，来使它达到宽度 20px。<em>但是 Sketch 在导出 slice 时总是自作聪明地把透明像素裁切掉。</em></p>
<p><strong>解决方法：</strong></p>
<p>默认情况下，我们对一个 Symbol 点击 Make Exportable 后，会变成这个样子，Symbol 标志的右下角加了一个切片标志。这时候我们是不能改变 <strong>Export 的各种属性</strong>的。<br><img src="http://stoneark.qiniudn.com/blogimg/sketch_keep_transparent_pixels_1.png" width="116"></p>
<p>在右侧 Export 区域，点击小刀图标：<br><img src="http://stoneark.qiniudn.com/blogimg/sketch_keep_transparent_pixels_2.png" width="211"></p>
<p>就会变成这样的两个层：<br><img src="http://stoneark.qiniudn.com/blogimg/sketch_keep_transparent_pixels_3.png" width="108"></p>
<p>然后我们就可以点击上面那个切片层，设置所有的 <strong>Export 属性</strong>，确保 Trim Transparent Pixels 未选中即可，并且调节 Size 和 Position，让切片左右两侧有透明区域。<br><img src="http://stoneark.qiniudn.com/blogimg/sketch_keep_transparent_pixels_4.png" width="212"></p>
<p>注意的是，这时切片层和 Symbol 已经没有任何联系了，而是一个普普通通的切片，所以可以任意调节位置、大小等。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有些图标我们希望它的边缘要有一定的透明像素。&lt;/p&gt;
&lt;p&gt;比如有一组图标作为 TableView 列表左侧的图标，如果这些图标的宽度不相同的话，会造成文字的左侧起点不能对齐。所以这一组图标的宽度必须都相同。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://stoneark
    
    </summary>
    
    
      <category term="Design" scheme="http://blog.stoneark.org/tags/Design/"/>
    
  </entry>
  
  <entry>
    <title>Local notification changes after iOS 8</title>
    <link href="http://blog.stoneark.org/2016/05/17/local-notification-changes-after-iOS-8/"/>
    <id>http://blog.stoneark.org/2016/05/17/local-notification-changes-after-iOS-8/</id>
    <published>2016-05-17T07:39:12.000Z</published>
    <updated>2016-07-21T07:15:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>大多数 iOS 开发者应该知道，在 iOS 8 的时候推送通知的开发有了些变化。主要体现在一些命名的变化（Remote 改为 User），另外相对之前只需要一句代码就能解决，现在需要多一些步骤。但总的来说改变并不大，实现原理并未改变。</p>
<p>如 iOS 7:</p>
<figure class="highlight objc"><figcaption><span>iOS 7</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[[<span class="built_in">UIApplication</span> sharedApplication] registerForRemoteNotificationTypes:(</div><div class="line">	<span class="built_in">UIRemoteNotificationTypeAlert</span> |</div><div class="line">	<span class="built_in">UIRemoteNotificationTypeBadge</span> | </div><div class="line">	<span class="built_in">UIRemoteNotificationTypeSound</span> )];</div></pre></td></tr></table></figure>
<p>iOS 8:</p>
<figure class="highlight objc"><figcaption><span>iOS 8</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">UIUserNotificationType</span> notificationTypes = <span class="built_in">UIUserNotificationTypeBadge</span> | <span class="built_in">UIUserNotificationTypeSound</span> | <span class="built_in">UIUserNotificationTypeAlert</span>;</div><div class="line"><span class="built_in">UIUserNotificationSettings</span> *notificationSettings = [<span class="built_in">UIUserNotificationSettings</span> settingsForTypes:notificationTypes categories:<span class="literal">nil</span>];</div><div class="line">[[<span class="built_in">UIApplication</span> sharedApplication] registerUserNotificationSettings:notificationSettings];</div><div class="line">[[<span class="built_in">UIApplication</span> sharedApplication] registerForRemoteNotifications];</div></pre></td></tr></table></figure>
<p>虽然很多人早就已经知道并在实践中作出了改变，但可能依然有些人并不知道 iOS 做出这种改变的原因。</p>
<p>原因是要对本地通知进行规范，并与远程推送通知进行统一。</p>
<p>之前对于本地通知，是无需取得用户授权的，只有远程推送类型的通知需要申请用户授权。上面的那些代码也只是针对远程通知来说的（所以它们之前的命名中都带有”Remote”字眼），本地通知根本无须注册，直接发送通知就好了。但其实这并不合理。</p>
<p>进行改变之后，本地通知跟远程推送通知的概念进行了统一，它们唯一的不同只是消息来源的不同。所以本地通知也需要进行授权。</p>
<p>在代码上，它们的注册也只有一句代码的差距：如果只需要本地通知，则不书写最后的一句：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[<span class="built_in">UIApplication</span> sharedApplication] registerForRemoteNotifications];</div></pre></td></tr></table></figure>
<p>即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大多数 iOS 开发者应该知道，在 iOS 8 的时候推送通知的开发有了些变化。主要体现在一些命名的变化（Remote 改为 User），另外相对之前只需要一句代码就能解决，现在需要多一些步骤。但总的来说改变并不大，实现原理并未改变。&lt;/p&gt;
&lt;p&gt;如 iOS 7:&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://blog.stoneark.org/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iCloud development</title>
    <link href="http://blog.stoneark.org/2016/05/14/iCloud-development/"/>
    <id>http://blog.stoneark.org/2016/05/14/iCloud-development/</id>
    <published>2016-05-14T07:31:04.000Z</published>
    <updated>2016-07-20T07:34:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>iCloud 开发的几种模式：</p>
<ol>
<li>Key-value Storage，在 iCloud 上保存一些简单数据，类似 NSUserDefault 的 iCloud 端实现。每用户最多 1MB 存储。</li>
<li>iCloud Document，在 iCloud Drive 上以文件方式保存的数据。</li>
<li>CloudKit，后端云存储。与上面两个不同，上面是用户自己的 iCloud 存储，只有用户自己可以读取自己的数据。而 CloudKit 是开发者的 iCloud，是与用户无关的，所有用户都可访问。类似 LeanCloud、Bmob 之类的服务。目前可以认为对开发者是免费的（因为免费额度绝对足够大），除了 iOS 外还提供了 JS 的访问方式。</li>
</ol>
<p>具体可参考 <a href="https://developer.apple.com/library/ios/documentation/General/Conceptual/iCloudDesignGuide/Chapters/Introduction.html" target="_blank" rel="external">About Incorporating iCloud into Your App</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;iCloud 开发的几种模式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Key-value Storage，在 iCloud 上保存一些简单数据，类似 NSUserDefault 的 iCloud 端实现。每用户最多 1MB 存储。&lt;/li&gt;
&lt;li&gt;iCloud Document，在 
    
    </summary>
    
    
      <category term="iOS" scheme="http://blog.stoneark.org/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>得到某月有几天</title>
    <link href="http://blog.stoneark.org/2016/05/13/get-how-many-days-in-the-month/"/>
    <id>http://blog.stoneark.org/2016/05/13/get-how-many-days-in-the-month/</id>
    <published>2016-05-13T07:21:14.000Z</published>
    <updated>2016-07-20T07:29:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>获取某月有几天，经典算法是按月份和是否闰年进行判断。</p>
<p>对于 iOS，可以直接用 NSCalendar：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSDate</span> *today = [<span class="built_in">NSDate</span> date];</div><div class="line"><span class="built_in">NSCalendar</span> *c = [<span class="built_in">NSCalendar</span> currentCalendar];</div><div class="line"><span class="built_in">NSRange</span> days = [c rangeOfUnit:<span class="built_in">NSDayCalendarUnit</span> inUnit:<span class="built_in">NSMonthCalendarUnit</span> forDate:today];</div></pre></td></tr></table></figure>
<p>对于 js，也有一个巧妙的方法。js 里 Date 的构造方法 <code>new Date(&quot;yyyy/MM/dd&quot;)</code> ，当你传入的是 “yyyy/MM/0”，也就是日为 0 的话，得到的会是 yyyy/MM 月的上一个月的最后一天，这样就能通过它来得到上个月有几天了。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDaysInMonth</span>(<span class="params">year,month</span>)</span>&#123;</div><div class="line">    month = <span class="built_in">parseInt</span>(month,<span class="number">10</span>) + <span class="number">1</span>;</div><div class="line">    <span class="keyword">var</span> tempDate = <span class="keyword">new</span> <span class="built_in">Date</span>(year + <span class="string">"/"</span> + month + <span class="string">"/0"</span>);</div><div class="line">    <span class="keyword">return</span> tempDate.getDay();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;获取某月有几天，经典算法是按月份和是否闰年进行判断。&lt;/p&gt;
&lt;p&gt;对于 iOS，可以直接用 NSCalendar：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div cla
    
    </summary>
    
    
      <category term="Algorithm" scheme="http://blog.stoneark.org/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>国内 Android 应用市场对个人开发者并不友好</title>
    <link href="http://blog.stoneark.org/2016/04/29/Android-app-store-in-China-not-friendly-to-personal-developer/"/>
    <id>http://blog.stoneark.org/2016/04/29/Android-app-store-in-China-not-friendly-to-personal-developer/</id>
    <published>2016-04-29T06:34:43.000Z</published>
    <updated>2016-07-20T07:10:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>根据以往的经验，把一个 Android 应用在国内的应用市场上架简直容易得很－－审核？他们真的会审核吗？看一眼就会点击”审核通过“按钮吧！只是国内的应用市场太多，对各种资料的要求不尽相同，所以会很繁琐。但通过审核从来都不会是什么问题。</p>
<p>所以我从来都不担心 Android 应用的上架。</p>
<p>但这次还真就通不过了，原因是－－这次是个人开发者身份。国内这些 Android 应用市场对个人开发者并不友好。</p>
<p>在申请个人开发者账号时，就遇到了一些麻烦，有个市场要求必填固定电话，还有一个要求提供网络文化经营许可证，这直接就是把个人开发者拒之门外的意思。</p>
<p>提交应用后，被应用宝拒绝，理由：该应用内容包含支付功能，暂不支持个人开发商提交，请修改企业资质或删除支付相关功能后重新提交。</p>
<p>被 360 开放平台拒绝，理由：亲爱的开发者您好，应用名称（内容）体现为公司性质，名称：XX集团，请注册为企业开发者，并提供著作权或该公司授权证明后提交。</p>
<p>应用宝不允许个人开发者的应用带有支付功能，不知道这是出于什么考虑。但无法理解的是，提交的这个应用里并没有在线支付功能。360 提出的理由，这个应用的内容的确有公司性质，但是，好吧我也没什么好说的。</p>
<p>再次尝试依然得到了同样的结果，可能与相关的管理政策有关吧。还是不得不说，苹果对个人开发者非常友好，这可能也是 App Store 如此有生命力，诞生了这么多优秀作品的原因之一。</p>
<p>最后决定放弃在市场上线，直接发布 apk。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;根据以往的经验，把一个 Android 应用在国内的应用市场上架简直容易得很－－审核？他们真的会审核吗？看一眼就会点击”审核通过“按钮吧！只是国内的应用市场太多，对各种资料的要求不尽相同，所以会很繁琐。但通过审核从来都不会是什么问题。&lt;/p&gt;
&lt;p&gt;所以我从来都不担心 An
    
    </summary>
    
    
      <category term="Android" scheme="http://blog.stoneark.org/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android 代码混淆</title>
    <link href="http://blog.stoneark.org/2016/04/28/Android-shrink-code/"/>
    <id>http://blog.stoneark.org/2016/04/28/Android-shrink-code/</id>
    <published>2016-04-28T08:07:08.000Z</published>
    <updated>2016-07-19T08:46:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>Android Studio 工程中，默认就创建了 <code>proguard-rules.pro</code> 文件，可以在其中编写 Proguard 的混淆规则。</p>
<p>但是，默认是不打开混淆的，需要在 <code>build.gradle</code> 文件中，找到这一段：</p>
<figure class="highlight xml"><figcaption><span>build.gradle</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">buildTypes &#123;</div><div class="line">   release &#123;</div><div class="line">       minifyEnabled false</div><div class="line">       proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>把 <code>minifyEnabled</code> 从 false 改为 true，即可开启在 release 打包时进行混淆。</p>
<p>为什么混淆开关的名字是 minify enabled ？所谓的”混淆“，其实也就是用无意义的符号（如 a,b,c）去代替代码中有意义的符号（如 title, imagePath, url 等），那么代码即使被反编译后，依然很难直接看懂其含义。从另一个角度看，其实也是让代码精简化的过程。（另外，混淆代码的英文是 Shrink Code）</p>
<p>打开混淆后，在 proguard-rules.pro 文件中编辑混淆规则即可。这个文件其实就是之前用 Eclipse 时的 proguard.cfg，混淆规则的写法是一样的，需要在其中写明哪些类不要进行混淆。</p>
<p>具体可参考 Android 文档 <a href="http://developer.android.com/tools/help/proguard.html" target="_blank" rel="external">Shrink Your Code and Resources</a>。</p>
<p>需要注意的是，不要对第三方库进行混淆，否则调用第三方库的地方，将找不到对应方法，应该不难理解。LeanCloud 给出了一个混淆规则，可以参考：</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">-keepattributes Signature</div><div class="line">-dontwarn com.jcraft.jzlib.**</div><div class="line">-keep class com.jcraft.jzlib.**  &#123; *;&#125;</div><div class="line"></div><div class="line">-dontwarn sun.misc.**</div><div class="line">-keep class sun.misc.** &#123; *;&#125;</div><div class="line"></div><div class="line">-dontwarn com.alibaba.fastjson.**</div><div class="line">-keep class com.alibaba.fastjson.** &#123; *;&#125;</div><div class="line"></div><div class="line">-dontwarn sun.security.**</div><div class="line">-keep class sun.security.** &#123; *; &#125;</div><div class="line"></div><div class="line">-dontwarn com.google.**</div><div class="line">-keep class com.google.** &#123; *;&#125;</div><div class="line"></div><div class="line">-dontwarn com.avos.**</div><div class="line">-keep class com.avos.** &#123; *;&#125;</div><div class="line"></div><div class="line">-keep public class android.net.http.SslError</div><div class="line">-keep public class android.webkit.WebViewClient</div><div class="line"></div><div class="line">-dontwarn android.webkit.WebView</div><div class="line">-dontwarn android.net.http.SslError</div><div class="line">-dontwarn android.webkit.WebViewClient</div><div class="line"></div><div class="line">-dontwarn android.support.**</div><div class="line"></div><div class="line">-dontwarn org.apache.**</div><div class="line">-keep class org.apache.** &#123; *;&#125;</div><div class="line"></div><div class="line">-dontwarn org.jivesoftware.smack.**</div><div class="line">-keep class org.jivesoftware.smack.** &#123; *;&#125;</div><div class="line"></div><div class="line">-dontwarn com.loopj.**</div><div class="line">-keep class com.loopj.** &#123; *;&#125;</div><div class="line"></div><div class="line">-dontwarn com.squareup.okhttp.**</div><div class="line">-keep class com.squareup.okhttp.** &#123; *;&#125;</div><div class="line">-keep interface com.squareup.okhttp.** &#123; *; &#125;</div><div class="line"></div><div class="line">-dontwarn okio.**</div><div class="line"></div><div class="line">-dontwarn org.xbill.**</div><div class="line">-keep class org.xbill.** &#123; *;&#125;</div><div class="line"></div><div class="line">-keepattributes *Annotation*</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android Studio 工程中，默认就创建了 &lt;code&gt;proguard-rules.pro&lt;/code&gt; 文件，可以在其中编写 Proguard 的混淆规则。&lt;/p&gt;
&lt;p&gt;但是，默认是不打开混淆的，需要在 &lt;code&gt;build.gradle&lt;/code&gt; 文件中，找到这一段：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;figcaption&gt;&lt;span&gt;build.gradle&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;buildTypes &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   release &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       minifyEnabled false&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       proguardFiles getDefaultProguardFile(&#39;proguard-android.txt&#39;), &#39;proguard-rules.pro&#39;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;把 &lt;code&gt;minifyEnabled&lt;/code&gt; 从 false 改为 true，即可开启在 release 打包时进行混淆。&lt;/p&gt;
&lt;p&gt;为什么混淆开关的名字是 minify enabled ？所谓的”混淆“，其实也就是用无意义的符号（如 a,b,c）去代替代码中有意义的符号（如 title, imagePath, url 等），那么代码即使被反编译后，依然很难直接看懂其含义。从另一个角度看，其实也是让代码精简化的过程。（另外，混淆代码的英文是 Shrink Code）&lt;/p&gt;
&lt;p&gt;打开混淆后，在 proguard-rules.pro 文件中编辑混淆规则即可。这个文件其实就是之前用 Eclipse 时的 proguard.cfg，混淆规则的写法是一样的，需要在其中写明哪些类不要进行混淆。&lt;/p&gt;
&lt;p&gt;具体可参考 Android 文档 &lt;a href=&quot;http://developer.android.com/tools/help/proguard.html&quot;&gt;Shrink Your Code and Resources&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;需要注意的是，不要对第三方库进行混淆，否则调用第三方库的地方，将找不到对应方法，应该不难理解。LeanCloud 给出了一个混淆规则，可以参考：&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://blog.stoneark.org/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Add adsense in hexo blog</title>
    <link href="http://blog.stoneark.org/2016/04/26/add-adsense-in-hexo-blog/"/>
    <id>http://blog.stoneark.org/2016/04/26/add-adsense-in-hexo-blog/</id>
    <published>2016-04-26T07:44:31.000Z</published>
    <updated>2016-07-19T08:05:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>首先，找到现在正在使用的主题所在目录，如：<code>themes/light/</code>。如果不确定，可查看 <code>_config.yml</code> 中 theme 的值。</p>
<p>在主题目录的 <code>layout/_widget</code> 下，放着所有右边栏的小工具。在这个目录下新建文件 <code>adsense.ejs</code>，并在其中填入：</p>
<figure class="highlight plain"><figcaption><span>adsense.ejs</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;widget tag&quot;&gt;</div><div class="line">把从 AdSense 里获得的代码全部复制到这里</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
<p>最后，在主题根目录的 _config.yml 里，在 widgets 里面加入一项 <code>- adsense</code> 即可，如：</p>
<figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attr">widgets:</span></div><div class="line"><span class="bullet">-</span> search</div><div class="line"><span class="bullet">-</span> recent_posts</div><div class="line"><span class="bullet">-</span> adsense</div><div class="line"><span class="bullet">-</span> tagcloud</div></pre></td></tr></table></figure>
<p>这样就可以在右侧边栏里显示 Adsense 广告了。</p>
<p>原理：</p>
<a id="more"></a>
<p>可以看到 <code>/layout/_partial/sidebar.ejs</code> 里的内容：</p>
<figure class="highlight plain"><figcaption><span>sidebar.ejs</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;% theme.widgets.forEach(function(widget)&#123; %&gt;</div><div class="line">  &lt;%- partial(&apos;../_widget/&apos; + widget) %&gt;</div><div class="line">&lt;% &#125;); %&gt;</div></pre></td></tr></table></figure>
<p>也就是从配置文件里，把 widget 里所有的东西渲染出来，放到 sidebar 上。</p>
<p>如果不想放到右边栏里，也可以放到其他想放的地方，原理是类似的。可以在 /layout/_partial/ 中新建一个 ejs 文件，如 adsense.ejs，然后在其中粘贴上 Adsense 的代码。然后在需要显示广告的 layout 的 ejs 里，加入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;%- partial(&apos;_partial/adsense&apos;) %&gt;</div></pre></td></tr></table></figure>
<p>即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先，找到现在正在使用的主题所在目录，如：&lt;code&gt;themes/light/&lt;/code&gt;。如果不确定，可查看 &lt;code&gt;_config.yml&lt;/code&gt; 中 theme 的值。&lt;/p&gt;
&lt;p&gt;在主题目录的 &lt;code&gt;layout/_widget&lt;/code&gt; 下，放着所有右边栏的小工具。在这个目录下新建文件 &lt;code&gt;adsense.ejs&lt;/code&gt;，并在其中填入：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;adsense.ejs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;widget tag&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;把从 AdSense 里获得的代码全部复制到这里&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后，在主题根目录的 _config.yml 里，在 widgets 里面加入一项 &lt;code&gt;- adsense&lt;/code&gt; 即可，如：&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;figcaption&gt;&lt;span&gt;_config.yml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;widgets:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; search&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; recent_posts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; adsense&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; tagcloud&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样就可以在右侧边栏里显示 Adsense 广告了。&lt;/p&gt;
&lt;p&gt;原理：&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://blog.stoneark.org/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Blank activity and Empty activity in Android Studio</title>
    <link href="http://blog.stoneark.org/2016/04/21/blank-activity-and-empty-activity-in-android-studio/"/>
    <id>http://blog.stoneark.org/2016/04/21/blank-activity-and-empty-activity-in-android-studio/</id>
    <published>2016-04-21T09:31:18.000Z</published>
    <updated>2016-07-19T07:25:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>Android Studio 新建 Activity 的模板里，有一个 <code>Blank Activity</code>，还有一个 <code>Empty Activity</code>。这两个是不同的。</p>
<p>Blank Activity，会为你新建这样一个 Activity：含有导航栏，导航栏上有返回按钮，并设置了导航栏标题，右下角有一个浮动按钮。</p>
<p>可以发现工程中新建了一个 NewActivity.java 的类，同时新建了两个布局文件，一个是 activity_new.xml，另一个是 content_new.xml。activity_new.xml 中是一个 CoordinatorLayout，并且 include 了 content_new.xml。这个 Activity 显示的内容实际在 content_new.xml 中，它是一个 RelativeLayout。</p>
<p>Empty Activity，会为你新建这样一个 Activity：含有导航栏，没有返回按钮，导航栏标题没有设置，其他都是空白。</p>
<p>工程中新建了 NewActivity.java 和 activity_new.xml，里面是一个 RelativeLayout。</p>
<p>要想实现 Blank Activity 的效果，并希望不要有多余的东西，在一个 xml 布局中实现，可以按照以下框架（下面以 EditPasswordActivity 为例）:</p>
<a id="more"></a>
<figure class="highlight xml"><figcaption><span>activity_edit_password.xml</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"org.stoneark.doorsbylin.EditPasswordActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.AppBarLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme.AppBarOverlay"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"?attr/actionBarSize"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></div><div class="line">            <span class="attr">app:popupTheme</span>=<span class="string">"@style/AppTheme.PopupOverlay"</span> /&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.AppBarLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">        <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:paddingBottom</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">        <span class="attr">android:paddingLeft</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">        <span class="attr">android:paddingRight</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">        <span class="attr">android:paddingTop</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">        <span class="attr">app:layout_behavior</span>=<span class="string">"@string/appbar_scrolling_view_behavior"</span></div><div class="line">        <span class="attr">tools:context</span>=<span class="string">"org.stoneark.doorsbylin.EditPasswordActivity"</span> &gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.design.widget.CoordinatorLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>中间的这个 RelativeLayout，就是这个 Activity 实际承载的内容，替换成自己的布局即可。但请注意！！一定要为这个布局添加这个属性：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">app:layout_behavior="@string/appbar_scrolling_view_behavior"</div></pre></td></tr></table></figure>
<p>这样的话，这个布局将会在顶部导航栏的下方开始显示。如果不加这个属性，它将从屏幕顶端开始显示，会跟顶部的导航栏重叠在一起。在有的手机上会被导航栏遮盖，有的手机上会显示在导航栏上方。</p>
<blockquote>
<p>附注：@string/appbar_scrolling_view_behavior 是 Android SDK 里定义的一个字符串，直接使用即可，内容为：<br>  <string name="appbar_scrolling_view_behavior" translatable="false">android.support.design.widget.AppBarLayout$ScrollingViewBehavior</string></p>
</blockquote>
<p>然后在 Activity 的 onCreate() 里添加以下代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);</div><div class="line">setSupportActionBar(toolbar);</div><div class="line">getSupportActionBar().setDisplayHomeAsUpEnabled(<span class="keyword">true</span>);</div></pre></td></tr></table></figure>
<p>并且在 AndroidManifest.xml 里给这个 Activity 添加属性：</p>
<figure class="highlight xml"><figcaption><span>AndroidManifest.xml</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">activity</span></span></div><div class="line">  <span class="attr">android:name</span>=<span class="string">“.EditPasswordActivity</span>"</div><div class="line">  <span class="attr">android:label</span>=<span class="string">"@string/title_activity_edit_password"</span></div><div class="line">  <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme.NoActionBar"</span>&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">meta-data</span></span></div><div class="line">      <span class="attr">android:name</span>=<span class="string">"android.support.PARENT_ACTIVITY"</span></div><div class="line">      <span class="attr">android:value</span>=<span class="string">"org.stoneark.doorsbylin.UserCenterActivity"</span> /&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android Studio 新建 Activity 的模板里，有一个 &lt;code&gt;Blank Activity&lt;/code&gt;，还有一个 &lt;code&gt;Empty Activity&lt;/code&gt;。这两个是不同的。&lt;/p&gt;
&lt;p&gt;Blank Activity，会为你新建这样一个 Activity：含有导航栏，导航栏上有返回按钮，并设置了导航栏标题，右下角有一个浮动按钮。&lt;/p&gt;
&lt;p&gt;可以发现工程中新建了一个 NewActivity.java 的类，同时新建了两个布局文件，一个是 activity_new.xml，另一个是 content_new.xml。activity_new.xml 中是一个 CoordinatorLayout，并且 include 了 content_new.xml。这个 Activity 显示的内容实际在 content_new.xml 中，它是一个 RelativeLayout。&lt;/p&gt;
&lt;p&gt;Empty Activity，会为你新建这样一个 Activity：含有导航栏，没有返回按钮，导航栏标题没有设置，其他都是空白。&lt;/p&gt;
&lt;p&gt;工程中新建了 NewActivity.java 和 activity_new.xml，里面是一个 RelativeLayout。&lt;/p&gt;
&lt;p&gt;要想实现 Blank Activity 的效果，并希望不要有多余的东西，在一个 xml 布局中实现，可以按照以下框架（下面以 EditPasswordActivity 为例）:&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://blog.stoneark.org/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android layout 背景图片不显示的奇怪问题</title>
    <link href="http://blog.stoneark.org/2016/04/21/Android-layout-background-image-not-show/"/>
    <id>http://blog.stoneark.org/2016/04/21/Android-layout-background-image-not-show/</id>
    <published>2016-04-21T07:31:12.000Z</published>
    <updated>2016-07-19T07:43:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>遇到一个奇怪问题。给一个 Activity 设置了全屏的背景图片，方法是给这个 Activity 最父层的 layout 设置 background 属性为这个图片的 drawable。运行后发现图片没有显示，背景全部是白色。</p>
<p>但是在 Android Studio 的 xml 布局渲染调试器里，是正常显示的，在模拟器（API23）里运行，也是正常显示的。</p>
<p>更奇怪的是，把 background 属性换成一个颜色值，可以正常显示。换成另外的一张图，也可以正常显示。</p>
<p>在 <a href="http://www.tc5u.com/android/1371608.htm" target="_blank" rel="external">http://www.tc5u.com/android/1371608.htm</a> 问题中，有人提到：</p>
<blockquote>
<p>如果楼主出现的是有的图片可以，有些图片不可以，请检查：<br>1、图片格式必须为png和jpg，也就是文件名称扩展名必须为.png或者.jpg<br>2、图片的分辨率宽度和高度都要控制在1000像素以内；<br>3、用Photoshop打开不能显示的图片，看是否为RGB格式，如果是CYMK格式的图片是不能显示的；<br>4、图片文件名称必须全部小写，不能有大写的文件名称。 </p>
</blockquote>
<p>发现是由于图片尺寸过大（宽、高超过了1000像素），缩小尺寸后就可以正常显示出来了。</p>
<p>还没调查清楚这是不是 Android 的约束，如果真的有这样的约束，那实在理解不能－－现在的手机 1080p 的屏幕满大街都是，还动不动就上 2K，1000px 实在是不够啊。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;遇到一个奇怪问题。给一个 Activity 设置了全屏的背景图片，方法是给这个 Activity 最父层的 layout 设置 background 属性为这个图片的 drawable。运行后发现图片没有显示，背景全部是白色。&lt;/p&gt;
&lt;p&gt;但是在 Android Stud
    
    </summary>
    
    
      <category term="Android" scheme="http://blog.stoneark.org/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android application display name</title>
    <link href="http://blog.stoneark.org/2016/04/19/Android-application-display-name/"/>
    <id>http://blog.stoneark.org/2016/04/19/Android-application-display-name/</id>
    <published>2016-04-19T08:30:25.000Z</published>
    <updated>2016-07-18T09:45:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>Android 应用的显示名称，在 <code>AndroidManifest.xml</code> 中进行修改。</p>
<figure class="highlight"><figcaption><span>AndroidManifest.xml</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;application</div><div class="line">   android:allowBackup="true"</div><div class="line">   android:icon="@mipmap/ic_launcher"</div><div class="line">   android:label="@string/app_name"</div><div class="line">   android:supportsRtl="true"</div><div class="line">   android:theme="@style/AppTheme"&gt;</div><div class="line">   &lt;activity</div><div class="line">       android:name=".LoginActivity"</div><div class="line">       android:label="@string/title_activity_login"&gt;</div><div class="line">       &lt;intent-filter&gt;</div><div class="line">           &lt;action android:name="android.intent.action.MAIN" /&gt;</div><div class="line">           &lt;category android:name="android.intent.category.LAUNCHER" /&gt;</div><div class="line">       &lt;/intent-filter&gt;</div><div class="line">   &lt;/activity&gt;</div><div class="line">   &lt;activity</div><div class="line">      ...</div><div class="line">   &lt;/activity&gt;</div><div class="line">&lt;/application&gt;</div></pre></td></tr></table></figure>
<p>我们会很显然的认为，修改最外层的 <code>android:label</code> 即可，也就是修改 <code>@string/app_name</code> 的值。但经过实践会发现并不是这样的，Launcher 里显示的竟然是 <code>@string/title_activity_login</code>，也就是 Login Activity 的标题。</p>
<p>实际上，在 Launcher 中显示的应用名称，是被标记为首页面的 Activity 的标题。也就是被标记为：</p>
<figure class="highlight xml"><figcaption><span>AndroidManifest.xml</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div></pre></td></tr></table></figure>
<p>的 Activity。</p>
<p>那 application 标签的 android:label 属性是用来做什么的？它的确如它的名字一样，代表了应用的名称。在应用程序管理器中看到的名称，就是这个名称。但是这个名称并不是 Launcher 用的名称，所以用户在手机的桌面（应用程序列表）中，看到的不是这个名称。</p>
<p>这着实让人感到不可理解。自认为还是 iOS 的处理方式更科学－－在 info.plist 文件中有一个属性 Bundle display name，在这里面存储了应用的显示名称，这是一个应用全局的设置。</p>
<p>那如果首页面 Activity 的标题，跟应用的显示名称不能保持一致，怎么办？那就在 AndroidManifest.xml 里，把首页面 Activity 的 label 设置成应用名称，然后在首页面 Activity 的 onCreate 里，用 setTitle 方法再把标题改掉就好了，如：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">   <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">   setTitle(<span class="string">"登录"</span>);</div><div class="line">   setContentView(R.layout.activity_login);</div><div class="line">   ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android 应用的显示名称，在 &lt;code&gt;AndroidManifest.xml&lt;/code&gt; 中进行修改。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;figcaption&gt;&lt;span&gt;AndroidManifest.xml&lt;/span&gt;&lt;/fig
    
    </summary>
    
    
      <category term="Android" scheme="http://blog.stoneark.org/tags/Android/"/>
    
  </entry>
  
</feed>
